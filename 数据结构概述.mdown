# 数据结构概述

### 定义	

我们如何把现实中大量而复杂的问题以特定的数据类型和特定的存储结构保存到主储存器（内存）中，以及在此基础上为实现某个功能（比如查找某个元素，删除某个元素，对所有元素进行排序）而执行的相应操作，这个相应的操作也叫算法

数据结构=个体+个体的关系

算法= 对存储数据的操作

### 衡量算法的标准

1. 时间复杂度（大概程序执行的次数）
2. 空间复杂度（算法执行过程中大概所占用的最大内存）
3. 难易程度
4. 健壮性

### 数据结构的地位

1. 数据结构是软件中最核心的课程
2. 程序= 数据的存储+数据的操作+可以被计算机执行的语言



```c
//常量量和表达式前面不能加&
```

### 结构体

为了表示一些复杂的数据，普通的基本类型变量无法满足要求

结构体是用户根据实际需要自己定义的复合数据类型

使用结构体两种方式

```c
struct Student st = {1000,"zhangsha",20};
struct Studen *pst = &st;
st.sid = 100;
pst->sid= 1000;
//pst所指向的结构体变量中的sid这个成员
//结构体变量不能加减乘除，只能相互赋值
```



### 线性结构（把所有的结点都可以用一一根直线穿起来）

连续储存[数组]

离散存储[链表]

线性接结构的两种常见应用

栈、队列



### 非线性结构

























